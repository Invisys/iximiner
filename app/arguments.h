//
// Created by Haifa Bogdan Adnan on 04/08/2018.
//

#ifndef IXIMINER_ARGUMENTS_H
#define IXIMINER_ARGUMENTS_H

#include "../hash/argon2/defs.h"

class DLLEXPORT arguments {
public:
    arguments(int argc, char *argv[]);

    bool valid(string &error);

    bool is_help();
    bool is_verbose();
    bool is_miner();
    bool is_autotune();
    bool is_proxy();

    string pool();
    string wallet();
    string name();
    string uid();
    bool is_autogenerated_name();
    double cpu_intensity();
    vector<double> &gpu_intensity();
    vector<string> gpu_filter();
    int proxy_port();

    double gpu_intensity_start();
    double gpu_intensity_stop();
    double gpu_intensity_step();
    int64_t autotune_step_time();

    int64_t update_interval();
    int64_t report_interval();

	string cpu_optimization();
	vector<string> gpu_optimization();

	int hs_threshold();

	bool show_pool_requests();

	int enable_api_port();

    string get_help();

	static string get_app_folder();
	static string get_app_name();
	static string get_app_version();

    int get_cards_count() { return __cards_count; }
    void set_cards_count(int count) { __cards_count = count; }

    argon2profile *get_argon2_profile() { return __profile; }
    void set_argon2_profile(argon2profile *profile) { __profile = profile; }

private:
    void __init();
    vector<string> __parse_multiarg(const string &arg);
    void __process_gpu_indexes();

    string __error_message;
    bool __error_flag;

    int __help_flag;
    int __verbose_flag;
    int __miner_flag;
    int __proxy_flag;
    int __autotune_flag;

    string __pool;
    string __wallet;
    string __name;
    string __uid;
    bool __auto_generated_name;
    double __cpu_intensity;
    vector<double> __gpu_intensity;
	vector<string> __gpu_filter;
    int __proxy_port;
    int64_t __update_interval;
    int64_t __report_interval;

    double __gpu_intensity_start;
    double __gpu_intensity_stop;
    double __gpu_intensity_step;
    int64_t __autotune_step_time;

	string __cpu_optimization;
	vector<string> __gpu_optimization;

	int __hs_threshold;

	bool __show_pool_requests;

	int __enable_api_port;

	int __cards_count;
	argon2profile *__profile;
    static string __argv_0;
};

#endif //IXIMINER_ARGUMENTS_H
